import { useEffect, useState } from "react";
import AdminLayout from "@/components/admin/AdminLayout";

type Order = {
  id: number;
  name: string;
  phone: string;
  passengers: number;
  childSeat: boolean;
  comment?: string | null;
  createdAt: string;
};

export default function OrdersPage() {
  const [orders, setOrders] = useState<Order[]>([]);
  const [loading, setLoading] = useState(true);

  async function load() {
    try {
      const res = await fetch("/api/orders");
      if (!res.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${res.status}`);
      }
      const data = await res.json();
      console.log("üì• –û—Ç–≤–µ—Ç API:", data); // –ª–æ–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      if (Array.isArray(data)) {
        setOrders(data);
      } else {
        console.error("‚ö†Ô∏è API –≤–µ—Ä–Ω—É–ª –Ω–µ –º–∞—Å—Å–∏–≤:", data);
        setOrders([]);
      }
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", err);
      setOrders([]);
    } finally {
      setLoading(false);
    }
  }

  useEffect(() => {
    load();
    const interval = setInterval(load, 5000);
    return () => clearInterval(interval);
  }, []);

  async function onDelete(id: number) {
    if (!confirm("–£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑?")) return;
    const res = await fetch(`/api/orders/${id}`, { method: "DELETE" });
    if (res.ok) {
      setOrders((prev) => prev.filter((o) => o.id !== id));
    }
  }

  return (
    <AdminLayout>
      <h1 className="text-2xl font-bold mb-4">–ó–∞–∫–∞–∑—ã</h1>

      {loading ? (
        <div className="text-center text-gray-500 py-6">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      ) : Array.isArray(orders) && orders.length > 0 ? (
        <div className="space-y-3">
          {orders.map((o) => (
            <div
              key={o.id}
              className="bg-white rounded-lg shadow p-3 space-y-2 text-sm"
            >
              <div className="flex justify-between">
                <span className="font-semibold">ID:</span>
                <span>{o.id}</span>
              </div>
              <div className="flex justify-between">
                <span className="font-semibold">–ò–º—è:</span>
                <span>{o.name}</span>
              </div>
              <div className="flex justify-between">
                <span className="font-semibold">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
                <span>{o.phone}</span>
              </div>
              <div className="flex justify-between">
                <span className="font-semibold">–ü–∞—Å—Å–∞–∂–∏—Ä—ã:</span>
                <span>{o.passengers}</span>
              </div>
              <div className="flex justify-between">
                <span className="font-semibold">–î–µ—Ç. –∫—Ä–µ—Å–ª–æ:</span>
                <span>{o.childSeat ? "–î–∞" : "–ù–µ—Ç"}</span>
              </div>
              {o.comment && (
                <div className="flex justify-between">
                  <span className="font-semibold">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</span>
                  <span className="text-slate-600">{o.comment}</span>
                </div>
              )}
              <div className="flex justify-between">
                <span className="font-semibold">–°–æ–∑–¥–∞–Ω:</span>
                <span>{new Date(o.createdAt).toLocaleString()}</span>
              </div>

              <button
                onClick={() => onDelete(o.id)}
                className="w-full bg-red-500 text-white py-2 rounded mt-2 hover:bg-red-600"
              >
                –£–¥–∞–ª–∏—Ç—å
              </button>
            </div>
          ))}
        </div>
      ) : (
        <div className="text-center text-gray-500 py-6">–ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</div>
      )}
    </AdminLayout>
  );
}
