"use client";

import React, { useState } from "react";
import { useSearchParams, useRouter } from "next/navigation";

export default function OrderForm() {
  const router = useRouter();
  // const params = useSearchParams();

  // // üîπ –î–∞–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç–∞ –∏–∑ query
  // const trip = {
  //   from: params.get("from") || "",
  //   to: params.get("to") || "",
  //   date: params.get("date") || "",
  //   time: params.get("time") || "",
  //   roundTrip: params.get("roundTrip") === "true",
  //   returnDate: params.get("returnDate") || "",
  //   returnTime: params.get("returnTime") || "",
  // };

  const trip = JSON.parse(localStorage.getItem("tripData") ?? "");

  // üîπ –õ–æ–∫–∞–ª—å–Ω—ã–π state –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
  const [name, setName] = useState("");
  const [phone, setPhone] = useState("");
  const [passengers, setPassengers] = useState(1);
  const [childSeat, setChildSeat] = useState(false);
  const [comment, setComment] = useState("");

  // üîπ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞
  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    const payload = {
      ...trip, // ‚ûï –º–∞—Ä—à—Ä—É—Ç
      name: name.trim(),
      phone: phone.trim(),
      passengers,
      childSeat,
      comment: comment.trim(),
    };

    console.log("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑:", payload);

    try {
      const res = await fetch("http://localhost:3000/api/orders", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload),
      });

      if (!res.ok) {
        const errorText = await res.text();
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:", errorText);
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑: " + errorText);
        return;
      }

      const data = await res.json();
      console.log("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:", data);

      router.push("/thanks");
    } catch (err) {
      console.error("üö® –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ –∫–æ–¥–∞:", err);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ üòû");
    }
  };

  return (
    <form onSubmit={handleSubmit} className="space-y-6 max-w-md mx-auto p-4">
      <h2 className="text-xl font-bold text-center mb-4">
        –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–µ–∑–¥–∫–∏
      </h2>

      {/* –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ */}
      <div className="bg-gray-100 p-3 rounded-lg text-sm space-y-1">
        <p>
          <strong>–û—Ç–∫—É–¥–∞:</strong> {trip.from}
        </p>
        <p>
          <strong>–ö—É–¥–∞:</strong> {trip.to}
        </p>
        <p>
          <strong>–î–∞—Ç–∞:</strong> {trip.date}
        </p>
        <p>
          <strong>–í—Ä–µ–º—è:</strong> {trip.time}
        </p>
        {trip.roundTrip && (
          <>
            <p>
              <strong>–û–±—Ä–∞—Ç–Ω–∞—è –¥–∞—Ç–∞:</strong> {trip.returnDate}
            </p>
            <p>
              <strong>–û–±—Ä–∞—Ç–Ω–æ–µ –≤—Ä–µ–º—è:</strong> {trip.returnTime}
            </p>
          </>
        )}
      </div>

      {/* –ò–º—è */}
      <div>
        <label className="block text-sm font-medium">–ò–º—è *</label>
        <input
          type="text"
          value={name}
          onChange={(e) =>
            setName(e.target.value.replace(/[^A-Za-z–ê-–Ø–∞-—è–Å—ë\s]/g, ""))
          }
          className="mt-1 w-full rounded-2xl border p-3"
          autoComplete="name"
          required
        />
      </div>

      {/* –¢–µ–ª–µ—Ñ–æ–Ω */}
      <div>
        <label className="block text-sm font-medium">–¢–µ–ª–µ—Ñ–æ–Ω *</label>
        <input
          type="tel"
          value={phone}
          onChange={(e) => setPhone(e.target.value.replace(/[^0-9+]/g, ""))}
          className="mt-1 w-full rounded-2xl border p-3"
          placeholder="+373 ..."
          autoComplete="tel"
          required
        />
      </div>

      {/* –ü–∞—Å—Å–∞–∂–∏—Ä—ã –∏ –∫—Ä–µ—Å–ª–æ */}
      <div className="grid grid-cols-2 gap-4">
        <div>
          <label className="block text-sm font-medium">–ü–∞—Å—Å–∞–∂–∏—Ä–æ–≤</label>
          <input
            type="number"
            min={1}
            max={6}
            value={passengers}
            onChange={(e) => setPassengers(+e.target.value)}
            className="mt-1 w-full rounded-2xl border p-3"
          />
        </div>
        <label className="flex items-center gap-2 mt-7">
          <input
            type="checkbox"
            checked={childSeat}
            onChange={(e) => setChildSeat(e.target.checked)}
          />
          –î–µ—Ç—Å–∫–æ–µ –∫—Ä–µ—Å–ª–æ
        </label>
      </div>

      {/* –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π */}
      <div>
        <label className="block text-sm font-medium">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</label>
        <textarea
          value={comment}
          onChange={(e) => setComment(e.target.value)}
          className="mt-1 w-full rounded-2xl border p-3"
          rows={3}
          placeholder="–ü–æ–∂–µ–ª–∞–Ω–∏—è –∫ –ø–æ–µ–∑–¥–∫–µ"
        />
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ */}
      <button
        type="submit"
        className="w-full h-14 rounded-2xl bg-black text-white text-lg font-semibold hover:bg-emerald-700"
      >
        –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑
      </button>
    </form>
  );
}
